#!/usr/bin/perl
# Lab 5 - Program 11
# Ensuring A Modest Amount Of Security

# Joe O'Regan
# 26/02/2016

# Issue a warning if the secret word list has not been modified in more than a week
# -M returns the age in days since a file or filehandle has last been modified

init_words();
print "What is your name? ";
$name = <STDIN>;
chomp $name;
if ($name =~ /^randal\b/i) 
{ 							# back to the other way :-)
  print "Hello, Randal! How good of you to be here!\n";
} 
else 
{
  print "Hello, $name!\n"; 				# ordinary greeting
  print "What is the secret word? ";
  $guess = <STDIN>;
  chomp ($guess);
  while (! good_word($name,$guess)) 
  {
    print "Wrong, try again. What is the secret word? ";
    $guess = <STDIN>;
    chomp ($guess);
  }
}
## subroutines from here down
sub init_words 
{
  open (WORDSLIST, "wordslist") ||
  die "can't open wordlist: $!";
  if (-M WORDSLIST >= 7.0) 		# NEW - check how hold wordlist is
  { 					# comply with bureaucratic policy
    die "Sorry, the wordslist is older than seven days."; # NEW - Error
  }
  while ($name = <WORDSLIST>) 		# NEW - undef gone
  {
    chomp ($name);
    $word = <WORDSLIST>;
    chomp ($word);
    $words{$name} = $word;
  }
  close (WORDSLIST) || die "couldn't close wordlist: $!";
}

sub good_word 
{
  my($somename,$someguess) = @_; 	# name the parameters
  $somename =~ s/\W.*//;		# delete everything after
					# first word
  $somename =~ tr/A-Z/a-z/;		# lowercase everything
  if ($somename eq "randal") 
  {					# should not need to guess
    return 1;				# return value is true
  } 
  elsif (($words{$somename} || "groucho") eq $someguess) 
  {
    return 1;				# return value is true
  } 
  else 
  {
    return 0;				# return value is false
  }
}
