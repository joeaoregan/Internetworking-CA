#!/usr/bin/perl
# Lab 4 - Program 9
# Making It A Bit More Modular

# Joe O'Regan
# 12/02/2016

# Subroutine good_word: takes a name and a guessed word, and returns true if the word is correct and false if not.

# sub (declares subroutine), my() (variables are private to the current block), @_ (local array), 
# return (subroutine returns to caller with supplied value), || (logical or)

%words = qw(fred camel
	    barney llama
	    betty alpaca
	    wilma alpaca
	    );
print "What is your name? ";
$name = <STDIN>;
chomp ($name);
if ($name =~ /^randal\b/i) 
{ 					# back to the other way :-)
  print "Hello, Randal! How good of you to be here!\n";
} 
else 
{
  print "Hello, $name!\n"; 		# ordinary greeting
  print "What is the secret word? ";
  $guess = <STDIN>;
  chomp ($guess);
  while (! good_word($name,$guess)) 	# While not a good_word - parameters passed to good_word
  {
    print "Wrong, try again. What is the secret word? ";
    $guess = <STDIN>;
    chomp ($guess);
  }
}
sub good_word 
{
  my($somename,$someguess) = @_; 	# name the parameters ($name = $somename etc)
  $somename =~ s/\W.*//; 		# get rid of everything after first word
  $somename =~ tr/A-Z/a-z/; 		# lowercase everything
  if ($somename eq "randal") 
  { 					# should not need to guess
    return 1; 				# return value is true
  } 
  elsif (($words{$somename} || "groucho") eq $someguess) 
  {
    return 1; 				# return value is true
  } 
  else 
  {
    return 0; 				# return value is false
  }
}

